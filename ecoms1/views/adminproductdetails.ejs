<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>Admin Product Details</title>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
  <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200&icon_names=refresh" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">

<style>
body {
  font-family: Arial, sans-serif;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  overflow-x: hidden;
}

.product-list-container {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 20px;
  background-color: #f8f9fa;
  flex-wrap: wrap;
}

.product-list-container h1 {
  flex-grow: 1;
  text-align: center;
  font-size: 30px;
  margin: 0 10px;
}

.product-list-container form,
.product-list-container div,
.product-list-container button {
  display: flex;
  align-items: center;
  margin: 0 5px;
}

button {
  background-color: #0A2472;
  color: white;
  border: none;
  padding: 7px 12px;
  cursor: pointer;
  border-radius: 5px;
  font-size: 16px;
}

button:hover {
  background-color: #0d5dbb;
}

.reset-button {
  background-color: #0A2472;
  color: #fff;
  border: none;
  padding: 2px 4px;
  font-size: 8px;
  border-radius: 5px;
  cursor: pointer;
  margin-top: 2px;
  margin-left: -8px !important;
}

.reset-button:hover {
  background-color: #0d5dbb;
  color: white;
}

.pagination {
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 20px 0;
  gap: 5px;
}

.pagination a,
.pagination span {
  padding: 8px 12px;
  text-decoration: none;
  color: #007bff;
  border: 1px solid #ddd;
  border-radius: 5px;
}

.pagination a:hover {
  background-color: #007bff;
  color: #fff;
  border-color: #007bff;
}

.pagination .current-page {
  background-color: #007bff;
  color: #fff;
  border-color: #007bff;
  pointer-events: none;
}

table {
  width: 97%;
  border-collapse: collapse;
  margin-top: 20px;
  margin-left: 20px;
}

table th {
  background-color: #0A2472;
  color: white;
  padding: 10px;
  text-align: left;
}

table td {
  padding: 10px;
  border: 1px solid #ddd;
}

table tbody tr:nth-child(odd) {
  background-color: #f9f9f9;
}

table tbody tr:nth-child(even) {
  background-color: #ffffff;
}
table th:nth-child(1), 
table td:nth-child(1) {
    width: 50px; 
}

table th:nth-child(2),
table td:nth-child(2) {
    width: 550px; 
}

table th:nth-child(3), 
table td:nth-child(3) {
    width: 100px; 
}

table th:nth-child(4), 
table td:nth-child(4) {
    width: 100px; 
}

table th:nth-child(5),
table td:nth-child(5) {
    width: 100px; 
}

table th:nth-child(6), 
table td:nth-child(6) {
    width: 100px; 
}
table th:nth-child(9), 
table td:nth-child(9){
  width: 100px;
}
table th:nth-child(7), 
table td:nth-child(7),
table th:nth-child(8), 
table td:nth-child(8),
table th:nth-child(10), 
table td:nth-child(10) {
    width: 60px; 
}
table td[data-column="productname"] a {
  text-decoration: none;
}

.sortable-column {
  cursor: pointer;
  position: relative;
  padding: 10px;
  text-align: left;
  background-color: #0A2472;
  color: white;
}

.sortable-column a {
  color: white;
  text-decoration: none !important;
  display: flex;
  align-items: center;
}

.sortable-column .sort-icon {
  margin-left: 5px;
  font-size: 12px;
  vertical-align: middle;
  display: inline-block;
}

.sortable-column a:hover .sort-icon {
  color: #0d5dbb;
}

.sortable-column.active {
  background-color: #0d5dbb;
}

.sortable-column.active .sort-icon {
  color: white;
}

.sortable-column a span.sort-icon:before {
  content: '\25B2';
}
.sortable-column.active .sort-icon:before {
  content: '\25B2'; 
}
.sortable-column.active .sort-icon.desc:before {
  content: '\25BC';
}

#searchInput, #category-select {
  padding: 6px 12px;
  font-size: 14px;
  border-radius: 5px;
  border: 1px solid #ddd;
  margin-right: 10px;
  flex-grow: 0;
  width: 200px;
}

.product-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 20px;
  margin: 20px;
}

.product-item {
  text-decoration: none !important;
  text-align: center;
  border: 1px solid #ccc;
  padding: 20px;
  background-color: #fff;
  transition: transform 0.2s, box-shadow 0.2s;
  cursor: pointer;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
}

.product-item:hover {
  transform: scale(1.05);
  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3);
}

.product-item img {
  max-width: 100%;
  height: auto;
}

.product-item h3 {
  margin: 10px 0;
  font-size: 18px;
}

.product-item p {
  margin: 8px 0;
  font-size: 14px;
}

.view-options {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: space-between;
  margin: 20px;
  gap: 10px;
  margin-top: -10px;
}

.view-options button {
  padding: 6px 12px;
  text-decoration: none;
  color: #0A2472;
  background-color: #fff;
  border: 1px solid #0A2472;
  border-radius: 5px;
  cursor: pointer;
}

.view-options button.active {
  background-color: #0A2472;
  color: #fff;
}

.view-options button:hover {
  background-color: #0d5dbb;
  color: #fff;
}

.view-options #display-count {
  margin: 0;
  font-size: 18px;
  text-align: center;
}

#grid-view-button {
  margin-left: 0;
}
@media(max-width:1329px){
  .product-list-container{
    flex-wrap: nowrap;
  }
  .product-list-container h1 {
  flex-grow: 1;
  text-align: center;
  font-size: 20px;
  white-space: nowrap;
  margin: 0 10px;
}
#searchInput, #category-select {
  padding: 4px 8px;
  font-size: 10px;
  border-radius: 5px;
  border: 1px solid #ddd;
  margin-right: 10px;
  flex-grow: 0;
  width: 100px;
}
.total-products-count, .total-stock-value{
  font-size: 12px;
}
button {
  background-color: #0A2472;
  color: white;
  border: none;
  padding: 4px 8px;
  cursor: pointer;
  border-radius: 5px;
  font-size: 12px;
}
.reset-button {
  background-color: #0A2472;
  color: #fff;
  border: none;
  padding: 2px 4px;
  font-size: 6px;
  border-radius: 5px;
  cursor: pointer;
  margin-top: 2px;
  margin-left: -8px !important;
}
}
@media(max-width:1019px){
  .app-bar{
    width: 100% !important;
    min-width: 1019px !important;
  }
}
@media (max-width: 768px) {
  .product-list-container {
    flex-wrap: wrap;
    justify-content: center;
  }

  .product-grid {
    gap: 10px;
  }

  .product-item {
    width: auto;
  }

  .view-options {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin: 20px;
}

.view-options .view-buttons {
  display: flex;
  gap: 10px;
}

.view-options button {
  padding: 6px 12px;
  text-decoration: none;
  color: #0A2472;
  background-color: #fff;
  border: 1px solid #0A2472;
  border-radius: 5px;
  cursor: pointer;
}

.view-options button.active {
  background-color: #0A2472;
  color: #fff;
}

.view-options button:hover {
  background-color: #0d5dbb;
  color: #fff;
}

#display-count {
  margin: 0;
  font-size: 18px;
  text-align: right;
}
}
.product-family-highlight {
    background-color: #f0f8ff;
    color: #8b4513;
  }

  .product-member-highlight {
    background-color: #fff8dc;
    color: #8b4513;
  }

  table.list-view th,
table.list-view td {
  padding: 8px;
  text-align: left;
}

table.list-view td.text-right {
  text-align: right; 
}

table.list-view th.sortable-column {
  text-align: center;
}
.material-symbols-outlined{
  font-size: 20px;
}
</style>
</head>
<body>
  <%- include('./adminappbar.ejs', { hideDropdownItems: false }) %>
  <div class="product-list-container">
    <form action="/adminproductdetails" method="get" id="productSearchForm">
      <input type="text" name="search" id="searchInput" placeholder="Search by Product Name" value="<%= search %>">
      <button type="button" onclick="resetSearch()" class="reset-button">
        <span class="material-symbols-outlined">refresh</span>
      </button>
      <input type="hidden" name="adminid" value="<%= adminId %>">
      <input type="hidden" name="page" value="<%= currentPage %>">
      <input type="hidden" name="category" id="hiddenCategoryInput" value="<%= selectedCategory %>">
      <button type="submit">Search</button>
    </form>
    <p id="total-products-count" class="total-products-count"><b>Total Count</b>: <%= totalProductsCount %></p>
  
    <h1 class="product-list-title">PRODUCT LIST</h1>
  
    <p class="total-stock-value"><b>Stock Value</b>: â‚¹<%= totalStockValue.toFixed(2) %></p>
    <div class="filter-by-category">
      <form action="/adminproductdetails" method="get" id="filter-form">
        <select name="category" id="category-select">
          <option value="">All Categories</option>
          <% categories.forEach(function(category) { %>
            <% if (category && category.trim() !== "") { %>
              <option value="<%= category %>" <% if (category === selectedCategory) { %> selected <% } %>>
                <%= category %>
              </option>
            <% } %>
          <% }); %>
        </select>
        <input type="hidden" name="adminid" value="<%= adminId %>">
        <input type="hidden" name="search" value="<%= search %>">
        <button type="submit">Filter</button>
      </form>
    </div>
  
    <button onclick="redirectToCreateCategory()" class="button">Create</button>
  </div>
  
  <div class="view-options">

    <div class="view-buttons">
      <button id="grid-view-button">Grid View</button>
      <button id="list-view-button">List View</button>
    </div>
    
   
    <p id="display-count" class="total-products-count"><b>Display Count</b>: <span id="filtered-count"></span></p>

  </div>
  
  <table class="list-view">
    <thead>
      <tr>
        <th>S.No</th>
        <th class="sortable-column" data-sort="productname">
          <a href="/adminproductdetails?page=<%= currentPage %>&adminid=<%= adminId %>&search=<%= search %>&category=<%= selectedCategory %>&sortKey=productname&isAscending=<%= sortKey === 'productname' && isAscending ? 'false' : 'true' %>">
            Product Name <span class="sort-icon <%= sortKey === 'productname' && !isAscending ? 'desc' : '' %>"></span>

          </a>
        </th>
        <th>Product Type</th>
        <th class="sortable-column" data-sort="category">
          <a href="/adminproductdetails?page=<%= currentPage %>&adminid=<%= adminId %>&search=<%= search %>&category=<%= selectedCategory %>&sortKey=category&isAscending=<%= sortKey === 'category' && isAscending ? 'false' : 'true' %>">
            Category <span class="sort-icon <%= sortKey === 'category' && !isAscending ? 'desc' : '' %>"></span>
          </a>
        </th>
        <th>Code</th>
        <th>HSN</th>
        <th>GST</th>
        <th>Weight</th>
        <th class="sortable-column" data-sort="salesprice">
          <a href="/adminproductdetails?page=<%= currentPage %>&adminid=<%= adminId %>&search=<%= search %>&category=<%= selectedCategory %>&sortKey=salesprice&isAscending=<%= sortKey === 'salesprice' && isAscending ? 'false' : 'true' %>">
            Sales Price <span class="sort-icon <%= sortKey === 'salesprice' && !isAscending ? 'desc' : '' %>"></span>
          </a>
        </th>
        <th class="sortable-column" data-sort="qty">
          <a href="/adminproductdetails?page=<%= currentPage %>&adminid=<%= adminId %>&search=<%= search %>&category=<%= selectedCategory %>&sortKey=qty&isAscending=<%= sortKey === 'qty' && isAscending ? 'false' : 'true' %>">
            Quantity <span class="sort-icon <%= sortKey === 'qty' && !isAscending ? 'desc' : '' %>"></span>
          </a>
        </th>
      </tr>
    </thead>
    
    <tbody id="list-view-body">
      <% productDetails.forEach(function(product, index) { %>
        <tr class="<%= product.producttype === 'productfamily' ? 'product-family-highlight' : '' %> <%= product.producttype === 'member' ? 'product-member-highlight' : '' %>">
          <td><%= startSerialNumber + index %></td>
          <td data-column="productname">
            <a href="/admineditproduct?productid=<%= product.productid %>&adminid=<%= adminId %>"
               class="<%= product.producttype === 'productfamily' ? 'product-family-highlight' : '' %> <%= product.producttype === 'member' ? 'product-member-highlight' : '' %>">
              <%= product.productname %>
            </a>
          </td>
          <td><%= product.producttype %></td>
          <td><%= product.producttype === 'productfamily' ? 'Family Group' : product.category %></td>
          <td><%= product.producttype === 'productfamily' ? '--' : product.code %></td>
          <td><%= product.producttype === 'productfamily' ? '--' : product.hsn %></td>
          <td data-column="gst" class="text-right"><%= product.producttype === 'productfamily' ? '--' : product.GST %></td>
          <td class="text-right"><%= product.producttype === 'productfamily' ? '--' : product.weight %></td>
          <td data-column="salesprice" class="text-right">
            <%= product.producttype === 'productfamily' ? '--' : 'â‚¹' + product.salesprice %>
          </td>
          <td data-column="qty" class="text-right">
            <%= product.producttype === 'productfamily' ? '--' : product.qty %>
          </td>
        </tr>
      <% }); %>
    </tbody>
    
  </table>

  <div class="grid-view" style="display: none;" id="grid-view-container">
    <div class="product-grid" id="grid-view-body">
      <% productDetails.forEach(function(product) { %>
        <div class="product-item">
          <a href="/admineditproduct?productid=<%= product.productid %>&adminid=<%= adminId %>">
            <% if (product.producttype === 'productfamily') { %>
              <img src="/images/productfamily.jpg" alt="<%= product.productname %>">
            <% } else { %>
              <img src="<%= product.imagepath %>" alt="<%= product.productname %>">
            <% } %>
            <h3><%= product.productname %></h3>
            <% if (product.producttype !== 'productfamily') { %>
              <p>Sales Price: â‚¹<%= product.salesprice %></p>
              <p>Quantity: <%= product.qty %></p>
            <% } %>
          </a>
        </div>
      <% }); %>
    </div>
  </div>

  <div class="pagination">
    <% if (totalPages > 0) { %>
      <% if (currentPage > 1) { %>
        <a href="/adminproductdetails?page=<%= currentPage - 1 %>&adminid=<%= adminId %>&search=<%= search %>&category=<%= selectedCategory %>&sortKey=<%= sortKey %>&isAscending=<%= isAscending ? 'true' : 'false' %>">&laquo; Previous</a>
      <% } %>
  
      <% if (currentPage > 3) { %>
        <a href="/adminproductdetails?page=1&adminid=<%= adminId %>&search=<%= search %>&category=<%= selectedCategory %>&sortKey=<%= sortKey %>&isAscending=<%= isAscending ? 'true' : 'false' %>">1</a>
        <% if (currentPage > 4) { %>
          <span>...</span>
        <% } %>
      <% } %>
  
      <% for (let i = Math.max(1, currentPage - 2); i <= Math.min(totalPages, currentPage + 2); i++) { %>
        <% if (i === currentPage) { %>
          <span class="current"><%= i %></span>
        <% } else { %>
          <a href="/adminproductdetails?page=<%= i %>&adminid=<%= adminId %>&search=<%= search %>&category=<%= selectedCategory %>&sortKey=<%= sortKey %>&isAscending=<%= isAscending ? 'true' : 'false' %>"><%= i %></a>
        <% } %>
      <% } %>
  
      <% if (currentPage < totalPages - 2) { %>
        <% if (currentPage < totalPages - 3) { %>
          <span>...</span>
        <% } %>
        <a href="/adminproductdetails?page=<%= totalPages %>&adminid=<%= adminId %>&search=<%= search %>&category=<%= selectedCategory %>&sortKey=<%= sortKey %>&isAscending=<%= isAscending ? 'true' : 'false' %>"><%= totalPages %></a>
      <% } %>
  
      <% if (currentPage < totalPages) { %>
        <a href="/adminproductdetails?page=<%= currentPage + 1 %>&adminid=<%= adminId %>&search=<%= search %>&category=<%= selectedCategory %>&sortKey=<%= sortKey %>&isAscending=<%= isAscending ? 'true' : 'false' %>">Next &raquo;</a>
      <% } %>
    <% } else { %>
      <p>No products found.</p>
    <% } %>
  </div>
  
</div>
  <script>
function resetSearch() {
    document.getElementById('searchInput').value = '';
    document.querySelector('input[name="page"]').value = 1; 
    document.getElementById('productSearchForm').submit();
  }

  function redirectToCreateCategory() {
      window.location.href = '/createcategory';
  }

  document.addEventListener('DOMContentLoaded', function() {
  const listViewButton = document.getElementById('list-view-button');
  const gridViewButton = document.getElementById('grid-view-button');
  const listView = document.querySelector('.list-view');
  const gridView = document.querySelector('.grid-view');

  let selectedView = localStorage.getItem('productView') || 'list';
  toggleView(selectedView);

  listViewButton.addEventListener('click', function() {
    toggleView('list');
  });

  gridViewButton.addEventListener('click', function() {
    toggleView('grid');
  });

  function toggleView(view) {
    if (view === 'list') {
      listView.style.display = 'block';
      gridView.style.display = 'none';
      listViewButton.disabled = true;
      gridViewButton.disabled = false;
    } else {
      listView.style.display = 'none';
      gridView.style.display = 'block';
      listViewButton.disabled = false;
      gridViewButton.disabled = true;
    }
    localStorage.setItem('productView', view);
  }

  const headers = document.querySelectorAll('.sortable-column');
  headers.forEach(header => {
    header.addEventListener('click', () => {
      const sortKey = header.dataset.sort;
      const isAscending = !header.classList.contains('ascending');
      const currentURL = new URL(window.location.href);
      currentURL.searchParams.set('sortKey', sortKey);
      currentURL.searchParams.set('isAscending', isAscending ? 'true' : 'false');
      window.location.href = currentURL.toString();
    });
  });
});

document.addEventListener('DOMContentLoaded', () => {
    const listViewButton = document.getElementById('list-view-button');
    const gridViewButton = document.getElementById('grid-view-button');

    listViewButton.addEventListener('click', () => {
      listViewButton.classList.add('active');
      gridViewButton.classList.remove('active');
    });

    gridViewButton.addEventListener('click', () => {
      gridViewButton.classList.add('active');
      listViewButton.classList.remove('active');
    });
  });

      function sortProducts(sortKey, isAscending) {
          const rows = Array.from(document.querySelectorAll('.list-view tbody tr'));
          const products = rows.map(row => ({
              element: row,
              productname: row.querySelector('[data-column="productname"]').textContent.trim(),
              salesprice: parseFloat(row.querySelector('[data-column="salesprice"]').textContent.replace(/[^\d.-]/g, '')) || 0,
              gst: parseFloat(row.querySelector('[data-column="gst"]').textContent.replace(/[^\d.-]/g, '')) || 0,
              qty: parseInt(row.querySelector('[data-column="qty"]').textContent) || 0,
          }));

          products.sort((a, b) => {
              const aValue = a[sortKey];
              const bValue = b[sortKey];

              if (isAscending) {
                  return aValue > bValue ? 1 : -1;
              } else {
                  return aValue < bValue ? 1 : -1;
              }
          });

          const listBody = document.getElementById('list-view-body');
          listBody.innerHTML = '';
          products.forEach(p => listBody.appendChild(p.element));

          const gridProducts = Array.from(document.querySelectorAll('.grid-view .product-item'));
          const gridMap = new Map(
              gridProducts.map(item => [
                  item.querySelector('h3').textContent.trim(),
                  item
              ])
          );

          const gridBody = document.getElementById('grid-view-body');
          gridBody.innerHTML = '';
          products.forEach(p => {
              const gridItem = gridMap.get(p.productname);
              if (gridItem) gridBody.appendChild(gridItem);
          });
      }
      document.addEventListener('DOMContentLoaded', function () {
    const search = new URLSearchParams(window.location.search).get('search') || '';
    const category = new URLSearchParams(window.location.search).get('category') || '';

    fetch(`/getFilteredProductCount?search=${encodeURIComponent(search)}&category=${encodeURIComponent(category)}`)
      .then(response => response.json())
      .then(data => {
        document.getElementById('filtered-count').textContent = data.filteredProductsCount || 0;
      })
      .catch(error => {
        console.error('Error fetching filtered product count:', error);
        document.getElementById('filtered-count').textContent = 'Error';
      });

    fetch(`/getSearchedProductCount?search=${encodeURIComponent(search)}`)
      .then(response => response.json())
      .then(data => {
        document.getElementById('searched-count').textContent = data.searchedProductsCount || 0;
      })
      .catch(error => {
        console.error('Error fetching searched product count:', error);
        document.getElementById('searched-count').textContent = 'Error';
      });
  });
  document.addEventListener("DOMContentLoaded", function () {
    const listViewButton = document.getElementById("list-view-button");
    const gridViewButton = document.getElementById("grid-view-button");

    const activeView = localStorage.getItem("activeView");
    if (activeView === "list") {
      setActiveButton(listViewButton, gridViewButton);
    } else if (activeView === "grid") {
      setActiveButton(gridViewButton, listViewButton);
    }

    listViewButton.addEventListener("click", function () {
      localStorage.setItem("activeView", "list");
      setActiveButton(listViewButton, gridViewButton);
    });

    gridViewButton.addEventListener("click", function () {
      localStorage.setItem("activeView", "grid");
      setActiveButton(gridViewButton, listViewButton);
    });

    function setActiveButton(activeButton, inactiveButton) {
      activeButton.classList.add("active");
      inactiveButton.classList.remove("active");
    }
  });

  document.addEventListener('DOMContentLoaded', function () {
  const searchForm = document.getElementById('productSearchForm');
  const categorySelect = document.getElementById('category-select');
  const hiddenCategoryInput = document.getElementById('hiddenCategoryInput');

  searchForm.addEventListener('submit', function () {
    hiddenCategoryInput.value = categorySelect.value;
  });

  const filterForm = document.getElementById('filter-form');

  filterForm.addEventListener('submit', function () {
    hiddenCategoryInput.value = categorySelect.value;
  });

  categorySelect.addEventListener('change', function (event) {

    console.log(`Category selected: ${event.target.value}`);
  });
});

  </script>
</body>

</html>