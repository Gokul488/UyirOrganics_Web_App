<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Add Special Offer</title>
  <style>

    body {
      font-family: Arial, sans-serif;
      margin: 20px;
    }
    h2 {
      margin-left: 40px;
    }
    h1 {
      order: 2;
      margin-top: -30px;
      font-size: 30px;
      font-weight: bold;
      margin-left: 600px;
      white-space: nowrap;
    }
    .form-container {
      width: 700px;
      padding: 20px;
      background-color: white;
      border-radius: 8px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      box-sizing: border-box;
      margin-left: 300px;
      position: relative;
      margin-top: 10px;
      transform: translateY(0);
  }
    .form-container form {
      display: flex;
      flex-direction: column;
    }
    .form-group {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 15px;
    }
    .form-container label {
      flex: 1;
      margin-right: -30px; 
      font-size: large;
      font-weight: bold;
    }
    .form-container input[type="text"],
    .form-container select,
    .form-container textarea,
    .form-container input[type="datetime-local"],
    .form-container input[type="number"] {
      flex: 2;
      padding: 10px;
      border: 1px solid #ccc;
      border-radius: 4px;
      box-sizing: border-box;
      font-size: large;
      width: 100%;
    }
    a{
      text-decoration: none;
      color: #0A2472;
    }
    a:hover{
    color: #0d5dbb;
    }
    .form-container button {
      padding: 8px 16px; 
      background-color: #0A2472;
      color: white;
      border: none;
      border-radius: 4px;
      width: 150px;
      cursor: pointer;
      font-size: 16px; 
      margin: 0; 
      margin-left: 250px;
      display: block; 
    }
    .form-container button:hover {
      background-color:  #0d5dbb;
    }
.app-bar #common-name, .app-bar #sname{
  font-weight: normal;
}
    table {
      width: 90%;
      border-collapse: collapse;
      margin-top: 20px;
      margin-left:40px;
      margin-right: 50px;
      white-space:nowrap;
    }
    th,
    td {
      border: 1px solid #dddddd;
      text-align: left;
      padding: 8px;
    }
    th {
      background-color: #0A2472;
      color: #fff;
    }
    td:nth-child(1){
      max-width: 400px;
      white-space: wrap;
    }
    td:nth-child(2),
    td:nth-child(3) { 
    text-align: right;
    }
    .back-button {
      display: inline-block;
      padding: 10px 20px;
      background-color: #0A2472;
      color: #fff;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      margin: 10px;
    }
    .back-button:hover {
      background-color:  #0d5dbb;
    }
    .app-bar .flex-head{
      margin-top: -30px;
    }
    @media (min-aspect-ratio: 1/1) {
      .back-button {
        top: 15px;
      }
    }
    @media (max-width: 1480px) {
     h1{
      margin-left: 550px;
     }
    }
    @media (max-width: 1450px) {
     h1{
      margin-left: 530px;
     }
    }
    @media (max-width: 1350px) {
     h1{
      margin-left: 480px;
     }
    }
   
    @media (max-width: 1246px) {
      .app-bar {
        width: 100%;
        min-width: 1246px;
      }
      .form-container{
        margin-left: 300px;
      }
      h1{
        margin-left: 500px;
      }
    }
 
  </style>
</head>
<body>
  <%- include('storeappbar.ejs') %>
  <button onclick="goBack()" class="back-button">Back</button>
  <h1>ADD SPECIAL OFFER</h1>

  <div class="form-container">
    <form id="offerForm">
      <input type="hidden" name="storeId" value="<%= storeId %>">

      <div class="form-group">
        <label for="product">Product</label>
        <select id="product" name="productId" required onchange="updateSalesPrice()">
          <% products.forEach(function(product) { %>
            <option value="<%= product.productid %>" data-salesprice="<%= product.salesprice %>">
              <%= product.productname %>
            </option>
          <% }); %>
        </select>
        
      </div>

      <div class="form-group">
        <label for="salesPrice">Sales Price</label>
        <input type="text" id="salesPrice" name="salesPrice" readonly>
      </div>

      <div class="form-group">
        <label for="discountPercentage">Discount %</label>
        <input type="number" id="discountPercentage" name="discountPercentage" placeholder="Enter discount percentage" min="0" max="100" step="0.01" oninput="calculateDiscountPrice()">
      </div>
      
      <div class="form-group">
        <label for="discountPrice">Discount Price</label>
        <input type="number" id="discountPrice" name="discountPrice" placeholder="Enter discount price" min="0" step="0.01" oninput="calculateDiscountPercentage()">
      </div>
      
      <div class="form-group">
        <label for="content">Offer Details</label>
        <textarea id="content" name="content" rows="2" required></textarea>
      </div>
      <div class="form-group">
        <label for="startDate">Start Date</label>
        <input type="datetime-local" id="startDate" name="startDate" required>
      </div>
      
      <div class="form-group">
        <label for="expiryDate">Expiry Date</label>
        <input type="datetime-local" id="expiryDate" name="expiryDate" required>
      </div>
      <button type="submit">Submit</button>
    </form>
  </div>

  <h2>SPECIAL OFFERS</h2>
<table>
  <thead>
    <tr>
      <th>Product Name</th>
      <th>Discount Price</th>
      <th>Discount %</th> <!-- New Column for Discount Percentage -->
      <th>Offer Details</th>
      <th>Start Date</th>
      <th>Expiry Date</th>
      <th>Actions</th>
    </tr>
  </thead>
  <tbody>
    <% specialOffers.forEach(function(offer) { %>
      <tr>
        <td>
          <% 
            const product = products.find(p => p.productid === offer.productid);
            if (product) { 
          %>
            <%= product.productname %>
          <% } else { %>
            Unknown Product
          <% } %>
        </td>
        <td><%= offer.discountprice %></td>
        <td><%= offer.discountpercentage %>%</td> <!-- Display Discount Percentage -->
        <td><%= offer.content %></td>
        <td>
          <% if (offer.startdate) { %>
            <%= new Date(offer.startdate).toLocaleString('en-GB', { 
              day: '2-digit', 
              month: '2-digit', 
              year: 'numeric', 
              hour: '2-digit', 
              minute: '2-digit', 
              second: '2-digit', 
              hour12: true 
            }) %>
          <% } else { %>
            No Start Date
          <% } %>
        </td>
        <td>
          <% if (offer.expirydate) { %>
            <%= new Date(offer.expirydate).toLocaleString('en-GB', { 
              day: '2-digit', 
              month: '2-digit', 
              year: 'numeric', 
              hour: '2-digit', 
              minute: '2-digit', 
              second: '2-digit', 
              hour12: true 
            }) %>
          <% } else { %>
            No Expiry Date
          <% } %>
        </td>
        <td>
          <a href="/editOffer/<%= offer.offerid %>">Edit</a> |
          <a href="#" onclick="openConfirmationDialog('<%= offer.offerid %>')">Delete</a>
        </td>
      </tr>
    <% }); %>
  </tbody>
</table>


  <div class="overlay" id="confirmationOverlay"></div>
  <div class="modal" id="confirmationModal">
    <p>Are you sure you want to delete this offer?</p>
    <button onclick="confirmDeletion()">Yes</button>
    <button onclick="closeConfirmationDialog()">Cancel</button>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>
document.getElementById('offerForm').addEventListener('submit', function (event) {
  event.preventDefault();
  const formData = new FormData(this);

  fetch('/uploadOffer', {
    method: 'POST',
    body: new URLSearchParams(formData)
  })
    .then(response => response.json())
    .then(data => {
      if (data.message === 'Offer added successfully' && data.newOffer) {
        Swal.fire({
          title: 'Success',
          text: data.message,
          icon: 'success',
          confirmButtonText: 'OK'
        }).then(() => {
          const newOffer = data.newOffer;
          const tableBody = document.querySelector('table tbody');
          const row = document.createElement('tr');
          row.innerHTML = `
            <td>${newOffer.productname}</td>
            <td>${newOffer.discountprice}</td>
            <td>${newOffer.discountpercentage}%</td>  <!-- Fix: Include discount percentage -->
            <td>${newOffer.content}</td>
            <td>${new Date(newOffer.startdate).toLocaleString()}</td>
            <td>${new Date(newOffer.expirydate).toLocaleString()}</td>
            <td>
              <a href="/editOffer/${newOffer.offerid}">Edit</a> |
              <a href="#" onclick="openConfirmationDialog('${newOffer.offerid}')">Delete</a>
            </td>
          `;
          tableBody.appendChild(row);
        });
      } else {
        Swal.fire({
          title: 'Error',
          text: 'Failed to add offer',
          icon: 'error',
          confirmButtonText: 'OK'
        });
      }
    })
    .catch(error => {
      console.error('Error:', error);
      Swal.fire({
        title: 'Error',
        text: 'Internal Server Error',
        icon: 'error',
        confirmButtonText: 'OK'
      });
    });
});

function updateSalesPrice() {
  const productSelect = document.getElementById("product");
  const selectedOption = productSelect.options[productSelect.selectedIndex];
  const salesPrice = selectedOption.getAttribute("data-salesprice");

  document.getElementById("salesPrice").value = salesPrice ? salesPrice : "N/A";
  
  // Reset discount fields when sales price changes
  document.getElementById("discountPercentage").value = "";
  document.getElementById("discountPrice").value = "";
}

// Set the initial value on page load
document.addEventListener("DOMContentLoaded", updateSalesPrice);


  // Set the initial value on page load
  document.addEventListener("DOMContentLoaded", updateSalesPrice);
    
    function openConfirmationDialog(offerId) {
      Swal.fire({
        title: 'Are you sure?',
        text: "You want to delete this offer?",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, delete it!'
      }).then((result) => {
        if (result.isConfirmed) {
          fetch(`/deleteOffer/${offerId}`, {
            method: 'DELETE'
          })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              Swal.fire(
                'Deleted!',
                'The offer has been deleted.',
                'success'
              ).then(() => {
                location.reload();
              });
            } else {
              Swal.fire({
                title: 'Error!',
                text: 'Failed to delete the offer',
                icon: 'error',
                confirmButtonText: 'OK'
              });
            }
          })
          .catch(error => {
            console.error('Error deleting offer:', error);
            Swal.fire({
              title: 'Error!',
              text: 'Failed to delete the offer',
              icon: 'error',
              confirmButtonText: 'OK'
            });
          });
        }
      });
    }

    function closeConfirmationDialog() {
      document.getElementById('confirmationOverlay').style.display = 'none';
      document.getElementById('confirmationModal').style.display = 'none';
    }
    function confirmLogout() {
    Swal.fire({
        title: 'Logout Confirmation',
        text: 'Are you sure you want to logout?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, Logout',
    }).then((result) => {
        if (result.isConfirmed) {
            document.cookie = 'token=; Max-Age=0; path=/;';
            sessionStorage.clear();

            window.location.href = 'http://localhost:7777';
        } else {
            Swal.fire({
                title: 'Cancelled',
                text: 'Logout cancelled.',
                icon: 'info',
                confirmButtonText: 'OK'
            });
        }
    });
}

function calculateDiscountPrice() {
  const salesPrice = parseFloat(document.getElementById("salesPrice").value);
  const discountPercentage = parseFloat(document.getElementById("discountPercentage").value);

  if (!isNaN(salesPrice) && !isNaN(discountPercentage)) {
    const discountAmount = (discountPercentage / 100) * salesPrice;
    document.getElementById("discountPrice").value = (salesPrice - discountAmount).toFixed(2);
  }
}

function calculateDiscountPercentage() {
  const salesPrice = parseFloat(document.getElementById("salesPrice").value);
  const discountPrice = parseFloat(document.getElementById("discountPrice").value);

  if (!isNaN(salesPrice) && !isNaN(discountPrice) && discountPrice <= salesPrice) {
    const discountPercentage = ((salesPrice - discountPrice) / salesPrice) * 100;
    document.getElementById("discountPercentage").value = discountPercentage.toFixed(2);
  }
}

    function goBack() {
      window.history.back();
    }
  </script>
</body>
</html>