<!DOCTYPE html>
<html lang="en">
    <head>
        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
        <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" integrity="sha512-K7U7pm0htdFy4XZKoPIdRnTSjFmMhj1zV9LzmZv5wS+9hSJQVgdE/KdS+1aFqu4t9eDvWGytiufhsRY5Itskag==" crossorigin="anonymous" referrerpolicy="no-referrer" />
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
        <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200&icon_names=refresh" />
        <title>Add Product</title>
    <style>
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: Arial, sans-serif;
    background-color: #f4f4f4;
}
.container {
    max-width: 1000px; 
    margin: 0 auto; 
    padding: 10px;
    background-color: #fff;
    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1); 
    border-radius: 8px; 
}


.update-stock-container {
    display: flex;
    flex-wrap: nowrap;
    align-items: center;
    justify-content: space-between;
    gap: 10px; 
    padding: 10px;
}
.update-stock-container h1{
    margin-right: 220px;
    font-size: 30px;
    font-weight: bold;
    margin-top: 5px;
}
.back-button {
      order: 1;
      display: inline-block;
      padding: 5px 7px !important;
      background-color: #0A2472;
      color: #fff;
      border: none;
      border-radius: 5px !important ;
      margin-top: -7px;
      cursor: pointer;
      position: relative;
      overflow: hidden;
      margin-left: 10px;
      font-size: 14px;
    }

    .back-button::before {
      position: absolute;
      top: 0;
      left: 0;
      width: 0;
      height: 100%;
      background-color: #0056b3;
      transition: width 0.3s ease;
    }

    .back-button:hover::before {
      width: 100%;
    }
.back-button:hover{
  background-color: #0d5dbb;
}
.search-container {
    display: flex;
    align-items: center;
    gap: 5px;
    flex-grow: 1; 
}

.search-container input {
    flex: 1;
    min-width: 100px;
    max-width: 200px;
}

.search-container button {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 5px 10px;
}

.button-group {
    display: flex;
    gap: 10px;
}
.btn-primary, .btn-secondary, #reset-button{
    background-color: #0A2472;
    color: #fff;
}
.btn-primary:hover, .btn-secondary:hover, #reset-button:hover{
    background-color:#0d5dbb ;
}
.product-table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 20px;
    margin: 0 auto;
}

.product-table thead th {
    background-color: #0A2472;
    color: #fff;
    text-align: left;
    padding: 10px;
    border: 1px solid #ddd;
}

.product-table tbody td {
    padding: 10px;
    border: 1px solid #ddd;
    text-align: right;
}
.product-table tbody input[type="number"] {
    width: 100%; 
    max-width: 90px; 
    padding: 5px; 
    text-align: center !important; 
    box-sizing: border-box; 
}
.product-table tbody td:first-child {
    text-align: left;
}
table th:nth-child(1), 
table td:nth-child(1) {
    width: 30%; 
}
table th:nth-child(2),
table td:nth-child(2) {
    width: 15%
}

table th:nth-child(3), 
table td:nth-child(3) {
    width: 15%; 
}

table th:nth-child(4), 
table td:nth-child(4) {
    width: 15%; 
}

@media(max-width:1200px){
    .app-bar{
        width: 100% !important;
        min-width: 1200px !important;
    }
    .btn-secondary, .update-stock-container h1{
        white-space: nowrap;
    }
    .update-stock-container h1{
    margin-right: 220px;
    font-size: 24px;
    font-weight: bold;
    margin-top: 5px;
}
}
@media(max-width:992px){
    .container{
        width: 100%;
        min-width: 992px;
        margin-left: 100px;
    }
    .update-stock-container {
    display: flex;
    flex-wrap: nowrap;
    align-items: center;
    justify-content: space-between;
    gap: 7px; 
    padding: 8px;
}
.btn-primary, .btn-secondary, #reset-button{
padding: 2px 5px;
}
.search-container input {
    flex: 1;
    min-width: 100px;
    max-width: 200px;
}
.update-stock-container h1{
    font-size: 20px;
    margin-right: 270px;
    font-weight: bold;
    margin-top: 5px;
}
}
@media(max-width:768px){
    .btn-secondary, .update-stock-container h1{
        white-space: nowrap;
    }
}
    </style>
</head>
<body>
    <div class="appbar">
    <%- include('storeappbar.ejs') %> 
</div>
    <br>
    <button onclick="goBack()" class="back-button">Back</button>
    <br>
    <div class="container">
        <div class="add-product">
            <form action="/addproduct/<%= storeId %>/submit" method="post" enctype="application/x-www-form-urlencoded" class="add-product-form">
                <div class="update-stock-container">
                    
                    <div class="search-container">
                        <input type="text" id="product-search" placeholder="Search Products" class="form-control">
                        <button type="button" id="reset-button" class="reset">
                            <span class="material-symbols-outlined">refresh</span>
                        </button>
                        <button type="button" id="search-button" class="btn btn-primary">Search</button>
                    </div>
                    <h1>UPDATE STOCK</h1>

           
                    
                    <div class="button-group">
                        <button type="button" id="add-selected-products-button" class="btn btn-secondary">Add Quantity</button>
                    </div>
                </div>
                <div id="error-message" style="display: none; color: red;"></div>
                <div id="success-message" style="display: none; color: green;"></div>
                <table class="product-table">
                    <thead>
                        <tr>
                            <th>Product Name</th>
                            <th>Unit Price</th>
                            <th>Quantity Available On Stock</th>
                            <th>Quantity</th>
                          
                        </tr>
                    </thead>
                    <tbody>
                        <% products.forEach(function(product) { %>
                            <tr data-product-id="<%= product.productid %>">
                                <td style="text-align: left;"><%= product.productname %></td>
                                <td style="text-align: right;">â‚¹<%= product.salesprice %></td>
                                <td style="text-align: right;"><%= product.qty %></td>
                                <td style="text-align: right;">
                                    <input type="number" name="product_<%= product.productid %>_qty" min="0" max="<%= product.qty %>">
                                </td>
                           
                            </tr>
                        <% }); %>
                    </tbody>
                </table>
            </form>
        </div>
    </div>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.19/dist/sweetalert2.all.min.js"></script>
    <script>
        const availableProductIds = JSON.parse('<%- JSON.stringify(availableProductIds) %>');
        console.log('Available Product IDs:', availableProductIds);
    
        availableProductIds.forEach(id => {
            document.querySelectorAll('.product-table tbody tr').forEach(row => {
                const productId = parseInt(row.getAttribute('data-product-id'), 10);
                if (productId === id) {
                    row.classList.add('available');
                }
            });
        });
    
        function confirmLogout() {
            Swal.fire({
                title: 'Logout Confirmation',
                text: 'Are you sure you want to logout?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, Logout',
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = 'http://localhost:7777/login';
                    history.replaceState(null, null, 'http://localhost:7777');
                } else {
                    const errorMessage = 'Logout cancelled.';
                    displayErrorDialog('Cancelled', errorMessage);
                }
            });
        }
    
        function displayErrorDialog(title, message) {
            Swal.fire({
                title: title,
                text: message,
                icon: 'error',
                confirmButtonText: 'OK'
            });
        }
    
        $(document).ready(function () {
            // Toggle dropdown menu
            $('.person-icon').click(function () {
                $('.dropdown-menu').toggleClass('show');
            });
    
            $(document).click(function (event) {
                if (!$(event.target).closest('.dropdown').length) {
                    $('.dropdown-menu').removeClass('show');
                }
            });
    
            // Reset Button Functionality
            $('#reset-button').click(function () {
                $('#product-search').val(''); // Clear the search input
                $('.product-table tbody tr').show(); // Show all rows
            });
    
            // Search Button Functionality
            $('#search-button').click(function () {
                const query = $('#product-search').val().toLowerCase(); // Get the search query
                $('.product-table tbody tr').each(function () {
                    const productName = $(this).find('td:first').text().toLowerCase();
                    if (productName.includes(query)) {
                        $(this).show(); // Show matching rows
                    } else {
                        $(this).hide(); // Hide non-matching rows
                    }
                });
            });
    
            // Add Selected Products Button
            $('#add-selected-products-button').click(function () {
                console.log('Add Selected Products button clicked');
                
                const productsToUpdate = [];
                let isValid = true;
    
                $('input[name$="_qty"]').each(function () {
                    const name = $(this).attr('name');
                    const quantity = $(this).val();
                    const productId = parseInt(name.split('_')[1], 10);
                    const maxQty = $(this).attr('max');
    
                    if (quantity && quantity > 0) {
                        if (parseInt(quantity) > parseInt(maxQty)) {
                            Swal.fire({
                                title: 'Quantity Exceeds Stock',
                                text: `The selected quantity for product ID ${productId} exceeds the available stock.`,
                                icon: 'warning',
                                confirmButtonText: 'OK'
                            });
                            isValid = false;
                            return false;
                        }
    
                        if (availableProductIds.includes(productId)) {
                            productsToUpdate.push({ productId, quantity });
                        }
                    }
                });
    
                console.log('Products to update:', productsToUpdate);
    
                if (!isValid) {
                    return;
                }
    
                if (productsToUpdate.length === 0) {
                    Swal.fire({
                        title: 'Products Not Available in the Store',
                        text: "Can't add quantity to the products which are not inserted to the store.",
                        icon: 'warning',
                        confirmButtonText: 'OK'
                    });
                    return;
                }
    
                $.ajax({
                    url: '/addselectedproducts/<%= storeId %>', 
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ products: productsToUpdate }),
                    success: function (response) {
                        console.log('API response:', response);
                        Swal.fire({
                            title: 'Update Successful',
                            text: 'Selected products have been successfully updated.',
                            icon: 'success',
                            confirmButtonText: 'OK'
                        }).then(() => {
                            location.reload();
                        });
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.error('API error:', textStatus, errorThrown);
                        let errorMessage = 'There was an error updating the selected products. Please try again.';
                        if (jqXHR.status === 400) {
                            const response = jqXHR.responseText;
                            if (response) {
                                errorMessage = response;
                            }
                        }
                        Swal.fire({
                            title: 'Update Failed',
                            text: errorMessage,
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    }
                });
            });
        });
    
        function goBack() {
            window.history.back();
        }
    </script>
    
</body>
</html>